Invoking the Interpreter:
  1) The Python interpreter is usually installed as /usr/local/bin/python3.13.
    putting /usr/local/bin in your Unix shell’s search path makes it possible to start it by typing the command:python3.13
  2) A second way of starting the interpreter is python -c command [arg] ..., which executes the  statement(s) in command, analogous to the shell’s -c option.

How to Exit Python Interpreter:
    Typing an end-of-file character (Control-D on Unix, Control-Z on Windows) at the primary prompt causes the interpreter to exit with a zero exit status. If that doesn’t work, you can exit the interpreter by typing the following command: quit().

Edit:
    "The interpreter’s line-editing features include interactive editing, history substitution(words from the history list into the input stream , making it easy to repeat commands , repeat arguements of previous commands in the current , fixing spelling mistakes) and code completion on systems.
    Command line editing is supported by typing Control-P to the first Python prompt you get. If it beeps -> command line editing is available. If ^P is echoed, command line editing isn’t available.

**The interpreter operates somewhat like the Unix shell: when called with standard input connected to a tty device(TeleTYpewriter), it reads and executes commands interactively; when called with a file name argument or with a file as standard input, it reads and executes a script from that file.

Python Module:
  Python modules are also useful as scripts. These can be invoked using python -m module [arg] ..., which executes the source file for module as if you had spelled out its full name on the command line.

Argument Passing:
  When known to the interpreter, the script name(Python script file usually has the . py suffix, simply we say as file name) and additional arguments thereafter are turned into a list of strings and assigned to the argv variable in the sys module. You can access this list by executing import sys.
  The length of the list is at least one; when no script and no arguments are given, sys.argv[0] is an empty string.

Interactive Mode:
  When commands are read from a tty, the interpreter is said to be in interactive mode. In this mode it prompts for the next command with the primary prompt, usually three greater-than signs (>>>); for continuation lines it prompts with the secondary prompt, by default three dots (...)

Source Code Encoding:
   "Python source files are treated as encoded in UTF-8.
   To declare encoding other than default we use the below command:
    # -*- coding: encoding -*-